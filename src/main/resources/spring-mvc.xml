<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
						   http://www.springframework.org/schema/mvc
						   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<context:component-scan base-package="base.*">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
	      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个可用的url地址 -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login.jsp"/>
			<mvc:exclude-mapping path="/common/**"/>
			<mvc:exclude-mapping path="/plugins/**"/>
			<mvc:exclude-mapping path="/staitic/**"/>
			<mvc:exclude-mapping path="/upload/**"/>
			<bean id="loginInterceptor" class="base.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!--开启注解模式-->
	<mvc:annotation-driven/>

	<!--配置js，css等静态资源文件直接映射到对应文件夹，不被DispatcherServlet处理 mapping to WebRoot 里面的静态文件位置目录
		Location访问地址-->
	<!--配置静态资源，直接映射到对应文件夹，不被DispatcherServlet处理-->
	<mvc:resources mapping="/common/**" location="/common/"/>
	<mvc:resources mapping="/plugins/**" location="/plugins/"/>
	<mvc:resources mapping="/static/**" location="/static/"/>
	<mvc:resources mapping="/upload/**" location="/upload/"/>

	<!--按照后缀来配置和文件夹配置结合就比较简单-->
	<mvc:resources mapping="/**/*.html" location="/"/>
	<mvc:resources mapping="/**/*.js" location="/"/>
	<mvc:resources mapping="/**/*.css" location="/"/>

	<!--配置文件上传-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!--默认编码-->
		<property name="defaultEncoding" value="utf-8"/>
		<!--文件最大值-->
		<property name="maxUploadSize" value="10485760000"/>
		<!--内存最大值-->
		<property name="maxInMemorySize" value="40960"/>
	</bean>
</beans>